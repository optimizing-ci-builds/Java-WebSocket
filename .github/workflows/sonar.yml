name: SonarQube
on: [push]
jobs:
  build:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/Java-WebSocket/Java-WebSocket/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
      - run: touch starting_build_uses-checkout_11
      - run: rm starting_build_uses-checkout_11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: touch starting_build_SetupJDK11_14
      - run: rm starting_build_SetupJDK11_14
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: touch starting_build_CacheSonarCloudpackages_18
      - run: rm starting_build_CacheSonarCloudpackages_18
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - run: touch starting_build_CacheMavenpackages_24
      - run: rm starting_build_CacheMavenpackages_24
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: touch starting_build_Buildandanalyze_30
      - run: rm starting_build_Buildandanalyze_30
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent install org.jacoco:jacoco-maven-plugin:report verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dmaven.test.failure.ignore=true
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: Check script file exists and execute
        if: always()
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: .github/workflows/script.py
      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          python .github/workflows/script.py
      - name: Checkout to destination CI-analyzes repo
        uses: actions/checkout@v3
        if: always()
        with:
          path: Java-WebSocket
          ref: '1679927460-168599f'
          repository: 'UT-SE-Research/ci-analyzes'
          token: '${{ secrets.API_TOKEN_GITHUB }}'
          persist-credentials: true
      - name: Copy files to push to another directory
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          mkdir -p Java-WebSocket/Java-WebSocket/.github/workflows/sonar/build
          cp -rvT optimizing-ci-builds-ci-analysis Java-WebSocket/Java-WebSocket/.github/workflows/sonar/build
      - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1679927460-168599f/Java-WebSocket/.github/workflows/sonar/build
      - name: Pushes analysis to another repository
        if: steps.check_files.outputs.files_exists == 'true'
        working-directory: Java-WebSocket
        run: |
          commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
          git config --global user.name 'UT-SE-Research'
          git config --global user.email '${{ secrets.EMAIL }}'
          git add .
          git commit -m $commit_message
          while ! git push -f origin 1679927460-168599f; do
            git pull --rebase origin 1679927460-168599f
            sleep $((RANDOM % 5 + 1))
          done
